Microsoft (R) Macro Assembler Version 5.00                  12/12/18 09:59:00
                                                             Page     1-1


       1				assume cs:code,ds:data 
       2 0000				data segment 
       3				;dat db 01,02,03,04,05,06,07,08,09,10; 
					signed -128~127  unsigned 0?255 
       4				;dat db -128,-127,-2,-1,0,1,2,126,127;i
					f a byte >=80 ,it is a negative number 
       5 0000  81 FE FF 80 00 01 02	dat db -127,-2,-1,-128,0,1,2,127,126 
       6       7F 7E			
       7				;dat db 123,-20,1,110,0,3,2,10,126 
       8				;dat db 0,9,-125,3,-6,2,-9,100,-101 
       9 0009  00 01			nong db 00,01 
      10 000B  74 68 65 20 6D 61 78	dispmax db 'the max of the quene is ' 
      11       20 6F 66 20 74 68 65	
      12       20 71 75 65 6E 65 20	
      13       69 73 20			
      14 0023  00 00 24			max db 0,0,'$' 
      15 0026  74 68 65 20 6D 69 6E	dispmin db 'the min of the quene is ' 
      16       20 6F 66 20 74 68 65	
      17       20 71 75 65 6E 65 20	
      18       69 73 20			
      19 003E  00 00 24			min db 0,0,'$' 
      20				; 0  1  2 ....126 127 |-128 -127 -126..
					 -2  -1 
      21				; 00 01 02    7e  7f  | 80   81   82   
					 fe  ff 
      22				;while all postive(including zero ) , c
					ompare directly 
      23				;while all negative, as described above
					 
      24				;while mixed,  
      25				;method 1: extend to word 
      26				;correspond to 0100-00ff 
      27				; -128    -127   -126..  -2    -1    0 
					     1    2 .... 126  127  
      28				;  0080   0081   0082    00fe  00ff  01
					00 0101 0102    017e  017f   
      29				;method 2: compare separately  + vs + /
					  - vs - 
      30 0041				data ends 
      31 0000				code segment 
      32 0000  B8 ---- R		start:  mov ax,data 
      33 0003  8E D8			        mov ds,ax 
      34				        ;lea di,nong 
      35 0005  B9 0008			        mov cx,8h 
      36 0008  E8 0010 R		        call branch 
      37 000B  B4 4C			        mov ah,4ch 
      38 000D  CD 21			        int 21h 
      39 000F  CC			        int 3h 
      40 0010  E3 5C			branch: jcxz a4 
      41 0012  56			        push si 
      42 0013  51			        push cx 
      43 0014  53			        push bx 
      44 0015  52			        push dx 
      45 0016  33 DB			        xor bx,bx 
Microsoft (R) Macro Assembler Version 5.00                  12/12/18 09:59:00
                                                             Page     1-2


      46 0018  8A 1C			        mov bl,[si] ;bh~=bx bl~=dx 
      47 001A  8B D3			        mov dx,bx 
      48				        ;mov bl,bh 
      49 001C  AC			a1:     lodsb 
      50				        ;load the prelude 
      51 001D  3C 80			        cmp al,80h 
      52 001F  72 4E			        jb prela 
      53 0021  B4 00			        mov ah,0h 
      54 0023				back1:   
      55 0023  80 FB 80			        cmp bl,80h 
      56 0026  72 50			        jb prelb 
      57 0028  B7 00			        mov bh,0 
      58 002A				back2:   
      59 002A  80 FA 80			        cmp dl,80h 
      60 002D  72 52			        jb preld 
      61 002F  B6 00			        mov dh,0h 
      62 0031				back3: 
      63 0031  3B C3			        cmp ax,bx; 0100 00ff 
      64 0033  76 05			        jbe a2; below or equal ax<=bx 
      65 0035  8B D8			        mov bx,ax 
      66 0037  EB 07 90			        jmp a3 
      67 003A  3B C2			a2:     cmp ax,dx 
      68 003C  73 02			        jae a3;above or equal ax>=dx 
      69				        ;cmp cx,8 
      70				        ;je a3 
      71 003E  8B D0			        mov dx,ax 
      72 0040  E2 DA			a3:     loop a1 
      73				        ; min-> al 
      74 0042  8D 3E 003E R		        lea di,min 
      75 0046  89 14			        mov [si],dx 
      76 0048  E8 008A R		        call hexa 
      77 004B  8D 3E 0023 R		        lea di,max 
      78 004F  89 1C			        mov [si],bx; max-> ah 
      79 0051  E8 008A R		        call hexa 
      80 0054  8D 16 000B R		        lea dx,dispmax 
      81 0058  B4 09			        mov ah,09h 
      82 005A  CD 21			        int 21h 
      83 005C  B2 0A			        mov dl,10 
      84 005E  B4 02			        mov ah,2 
      85 0060  CD 21			        int 21h 
      86 0062  8D 16 0026 R		        lea dx,dispmin 
      87 0066  B4 09			        mov ah,09h 
      88 0068  CD 21			        int 21h 
      89 006A  5A			        pop dx 
      90 006B  5B			        pop bx 
      91 006C  59			        pop cx 
      92 006D  5E			        pop si 
      93 006E  C3			a4:     ret 
      94 006F  8D 3E 0009 R		prela:  lea di,nong 
      95 0073  47			        inc di 
      96 0074  8A 25			        mov ah,[di] 
      97 0076  EB AB			        jmp back1 
      98 0078  8D 3E 0009 R		prelb:  lea di,nong 
      99 007C  47			        inc di 
Microsoft (R) Macro Assembler Version 5.00                  12/12/18 09:59:00
                                                             Page     1-3


     100 007D  8A 3D			        mov bh,[di] 
     101 007F  EB A9			        jmp back2 
     102 0081  8D 3E 0009 R		preld:  lea di,nong 
     103 0085  47			        inc di 
     104 0086  8A 35			        mov dh,[di] 
     105 0088  EB A7			        jmp back3 
     106 008A  8A 04			hexa:   mov al,[si] 
     107 008C  8A E0			        mov ah,al 
     108 008E  B1 04			        mov cl,4 
     109 0090  D2 C8			        ror al,cl 
     110 0092  80 E4 0F			        and ah,0fh 
     111 0095  24 0F			        and al,0fh 
     112 0097  04 30			        add al,30h 
     113 0099  3C 39			        cmp al,39h 
     114 009B  76 06			        jbe hex1 
     115 009D  3C 39			        cmp al,39h     
     116 009F  76 02			        jbe hex1       
     117 00A1  04 07			        add al,07h     
     118 00A3  80 C4 30			hex1:   add ah,30h             
     119 00A6  80 FC 39			        cmp ah,39h     
     120 00A9  76 03			        jbe hex2       
     121 00AB  80 C4 07			        add ah,07h     
     122 00AE  89 05			hex2:   mov [di],ax               
     123 00B0  C3			        ret 
     124 00B1				code ends 
     125				end start                              
					           
Microsoft (R) Macro Assembler Version 5.00                  12/12/18 09:59:00
                                                             Symbols-1


Segments and Groups:

                N a m e         	Length	 Align	Combine Class

CODE . . . . . . . . . . . . . .  	00B1	PARA	NONE	
DATA . . . . . . . . . . . . . .  	0041	PARA	NONE	

Symbols:            

                N a m e         	Type	 Value	 Attr

A1 . . . . . . . . . . . . . . .  	L NEAR	001C	CODE
A2 . . . . . . . . . . . . . . .  	L NEAR	003A	CODE
A3 . . . . . . . . . . . . . . .  	L NEAR	0040	CODE
A4 . . . . . . . . . . . . . . .  	L NEAR	006E	CODE

BACK1  . . . . . . . . . . . . .  	L NEAR	0023	CODE
BACK2  . . . . . . . . . . . . .  	L NEAR	002A	CODE
BACK3  . . . . . . . . . . . . .  	L NEAR	0031	CODE
BRANCH . . . . . . . . . . . . .  	L NEAR	0010	CODE

DAT  . . . . . . . . . . . . . .  	L BYTE	0000	DATA
DISPMAX  . . . . . . . . . . . .  	L BYTE	000B	DATA
DISPMIN  . . . . . . . . . . . .  	L BYTE	0026	DATA

HEX1 . . . . . . . . . . . . . .  	L NEAR	00A3	CODE
HEX2 . . . . . . . . . . . . . .  	L NEAR	00AE	CODE
HEXA . . . . . . . . . . . . . .  	L NEAR	008A	CODE

MAX  . . . . . . . . . . . . . .  	L BYTE	0023	DATA
MIN  . . . . . . . . . . . . . .  	L BYTE	003E	DATA

NONG . . . . . . . . . . . . . .  	L BYTE	0009	DATA

PRELA  . . . . . . . . . . . . .  	L NEAR	006F	CODE
PRELB  . . . . . . . . . . . . .  	L NEAR	0078	CODE
PRELD  . . . . . . . . . . . . .  	L NEAR	0081	CODE

START  . . . . . . . . . . . . .  	L NEAR	0000	CODE

@FILENAME  . . . . . . . . . . .  	TEXT  next		


    118 Source  Lines
    118 Total   Lines
     25 Symbols

  50586 + 465942 Bytes symbol space free

      0 Warning Errors
      0 Severe  Errors
